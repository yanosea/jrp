// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/proxy/pflag.go
//
// Generated by this command:
//
//	mockgen -source=./pkg/proxy/pflag.go -destination=./pkg/proxy/pflag_mock.go -package=proxy
//

// Package proxy is a generated GoMock package.
package proxy

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockFlagSet is a mock of FlagSet interface.
type MockFlagSet struct {
	ctrl     *gomock.Controller
	recorder *MockFlagSetMockRecorder
}

// MockFlagSetMockRecorder is the mock recorder for MockFlagSet.
type MockFlagSetMockRecorder struct {
	mock *MockFlagSet
}

// NewMockFlagSet creates a new mock instance.
func NewMockFlagSet(ctrl *gomock.Controller) *MockFlagSet {
	mock := &MockFlagSet{ctrl: ctrl}
	mock.recorder = &MockFlagSetMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFlagSet) EXPECT() *MockFlagSetMockRecorder {
	return m.recorder
}

// BoolVarP mocks base method.
func (m *MockFlagSet) BoolVarP(p *bool, name, shorthand string, value bool, usage string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "BoolVarP", p, name, shorthand, value, usage)
}

// BoolVarP indicates an expected call of BoolVarP.
func (mr *MockFlagSetMockRecorder) BoolVarP(p, name, shorthand, value, usage any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BoolVarP", reflect.TypeOf((*MockFlagSet)(nil).BoolVarP), p, name, shorthand, value, usage)
}

// IntVarP mocks base method.
func (m *MockFlagSet) IntVarP(p *int, name, shorthand string, value int, usage string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "IntVarP", p, name, shorthand, value, usage)
}

// IntVarP indicates an expected call of IntVarP.
func (mr *MockFlagSetMockRecorder) IntVarP(p, name, shorthand, value, usage any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IntVarP", reflect.TypeOf((*MockFlagSet)(nil).IntVarP), p, name, shorthand, value, usage)
}

// StringVarP mocks base method.
func (m *MockFlagSet) StringVarP(p *string, name, shorthand, value, usage string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "StringVarP", p, name, shorthand, value, usage)
}

// StringVarP indicates an expected call of StringVarP.
func (mr *MockFlagSetMockRecorder) StringVarP(p, name, shorthand, value, usage any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StringVarP", reflect.TypeOf((*MockFlagSet)(nil).StringVarP), p, name, shorthand, value, usage)
}
