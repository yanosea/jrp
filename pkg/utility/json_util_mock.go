// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/utility/json_util.go
//
// Generated by this command:
//
//	mockgen -source=./pkg/utility/json_util.go -destination=./pkg/utility/json_util_mock.go -package=utility
//

// Package utility is a generated GoMock package.
package utility

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockJsonUtil is a mock of JsonUtil interface.
type MockJsonUtil struct {
	ctrl     *gomock.Controller
	recorder *MockJsonUtilMockRecorder
	isgomock struct{}
}

// MockJsonUtilMockRecorder is the mock recorder for MockJsonUtil.
type MockJsonUtilMockRecorder struct {
	mock *MockJsonUtil
}

// NewMockJsonUtil creates a new mock instance.
func NewMockJsonUtil(ctrl *gomock.Controller) *MockJsonUtil {
	mock := &MockJsonUtil{ctrl: ctrl}
	mock.recorder = &MockJsonUtilMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJsonUtil) EXPECT() *MockJsonUtilMockRecorder {
	return m.recorder
}

// Marshal mocks base method.
func (m *MockJsonUtil) Marshal(v any) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Marshal", v)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Marshal indicates an expected call of Marshal.
func (mr *MockJsonUtilMockRecorder) Marshal(v any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Marshal", reflect.TypeOf((*MockJsonUtil)(nil).Marshal), v)
}
