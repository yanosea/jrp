// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/utility/tablewriter_util.go
//
// Generated by this command:
//
//	mockgen -source=./pkg/utility/tablewriter_util.go -destination=./pkg/utility/tablewriter_util_mock.go -package=utility
//

// Package utility is a generated GoMock package.
package utility

import (
	io "io"
	reflect "reflect"

	proxy "github.com/yanosea/jrp/v2/pkg/proxy"
	gomock "go.uber.org/mock/gomock"
)

// MockTableWriterUtil is a mock of TableWriterUtil interface.
type MockTableWriterUtil struct {
	ctrl     *gomock.Controller
	recorder *MockTableWriterUtilMockRecorder
}

// MockTableWriterUtilMockRecorder is the mock recorder for MockTableWriterUtil.
type MockTableWriterUtilMockRecorder struct {
	mock *MockTableWriterUtil
}

// NewMockTableWriterUtil creates a new mock instance.
func NewMockTableWriterUtil(ctrl *gomock.Controller) *MockTableWriterUtil {
	mock := &MockTableWriterUtil{ctrl: ctrl}
	mock.recorder = &MockTableWriterUtilMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTableWriterUtil) EXPECT() *MockTableWriterUtilMockRecorder {
	return m.recorder
}

// GetNewDefaultTable mocks base method.
func (m *MockTableWriterUtil) GetNewDefaultTable(writer io.Writer) proxy.Table {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNewDefaultTable", writer)
	ret0, _ := ret[0].(proxy.Table)
	return ret0
}

// GetNewDefaultTable indicates an expected call of GetNewDefaultTable.
func (mr *MockTableWriterUtilMockRecorder) GetNewDefaultTable(writer any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNewDefaultTable", reflect.TypeOf((*MockTableWriterUtil)(nil).GetNewDefaultTable), writer)
}
