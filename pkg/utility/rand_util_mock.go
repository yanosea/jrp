// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/utility/rand_util.go
//
// Generated by this command:
//
//	mockgen -source=./pkg/utility/rand_util.go -destination=./pkg/utility/rand_util_mock.go -package=utility
//

// Package utility is a generated GoMock package.
package utility

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockRandUtil is a mock of RandUtil interface.
type MockRandUtil struct {
	ctrl     *gomock.Controller
	recorder *MockRandUtilMockRecorder
	isgomock struct{}
}

// MockRandUtilMockRecorder is the mock recorder for MockRandUtil.
type MockRandUtilMockRecorder struct {
	mock *MockRandUtil
}

// NewMockRandUtil creates a new mock instance.
func NewMockRandUtil(ctrl *gomock.Controller) *MockRandUtil {
	mock := &MockRandUtil{ctrl: ctrl}
	mock.recorder = &MockRandUtilMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRandUtil) EXPECT() *MockRandUtilMockRecorder {
	return m.recorder
}

// GenerateRandomNumber mocks base method.
func (m *MockRandUtil) GenerateRandomNumber(max int) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateRandomNumber", max)
	ret0, _ := ret[0].(int)
	return ret0
}

// GenerateRandomNumber indicates an expected call of GenerateRandomNumber.
func (mr *MockRandUtilMockRecorder) GenerateRandomNumber(max any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateRandomNumber", reflect.TypeOf((*MockRandUtil)(nil).GenerateRandomNumber), max)
}
