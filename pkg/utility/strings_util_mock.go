// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/utility/strings_util.go
//
// Generated by this command:
//
//	mockgen -source=./pkg/utility/strings_util.go -destination=./pkg/utility/strings_util_mock.go -package=utility
//

// Package utility is a generated GoMock package.
package utility

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockStringsUtil is a mock of StringsUtil interface.
type MockStringsUtil struct {
	ctrl     *gomock.Controller
	recorder *MockStringsUtilMockRecorder
}

// MockStringsUtilMockRecorder is the mock recorder for MockStringsUtil.
type MockStringsUtilMockRecorder struct {
	mock *MockStringsUtil
}

// NewMockStringsUtil creates a new mock instance.
func NewMockStringsUtil(ctrl *gomock.Controller) *MockStringsUtil {
	mock := &MockStringsUtil{ctrl: ctrl}
	mock.recorder = &MockStringsUtilMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStringsUtil) EXPECT() *MockStringsUtilMockRecorder {
	return m.recorder
}

// RemoveNewLines mocks base method.
func (m *MockStringsUtil) RemoveNewLines(s string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveNewLines", s)
	ret0, _ := ret[0].(string)
	return ret0
}

// RemoveNewLines indicates an expected call of RemoveNewLines.
func (mr *MockStringsUtilMockRecorder) RemoveNewLines(s any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveNewLines", reflect.TypeOf((*MockStringsUtil)(nil).RemoveNewLines), s)
}

// RemoveSpaces mocks base method.
func (m *MockStringsUtil) RemoveSpaces(s string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveSpaces", s)
	ret0, _ := ret[0].(string)
	return ret0
}

// RemoveSpaces indicates an expected call of RemoveSpaces.
func (mr *MockStringsUtilMockRecorder) RemoveSpaces(s any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveSpaces", reflect.TypeOf((*MockStringsUtil)(nil).RemoveSpaces), s)
}

// RemoveTabs mocks base method.
func (m *MockStringsUtil) RemoveTabs(s string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveTabs", s)
	ret0, _ := ret[0].(string)
	return ret0
}

// RemoveTabs indicates an expected call of RemoveTabs.
func (mr *MockStringsUtilMockRecorder) RemoveTabs(s any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveTabs", reflect.TypeOf((*MockStringsUtil)(nil).RemoveTabs), s)
}
