// Code generated by MockGen. DO NOT EDIT.
// Source: ../app/library/utility/utility.go
//
// Generated by this command:
//
//	mockgen -source=../app/library/utility/utility.go -destination=../mock/app/library/utility/utility.go -package=mockutility
//

// Package mockutility is a generated GoMock package.
package mockutility

import (
	reflect "reflect"

	ioproxy "github.com/yanosea/jrp/app/proxy/io"
	gomock "go.uber.org/mock/gomock"
)

// MockUtilityInterface is a mock of UtilityInterface interface.
type MockUtilityInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUtilityInterfaceMockRecorder
}

// MockUtilityInterfaceMockRecorder is the mock recorder for MockUtilityInterface.
type MockUtilityInterfaceMockRecorder struct {
	mock *MockUtilityInterface
}

// NewMockUtilityInterface creates a new mock instance.
func NewMockUtilityInterface(ctrl *gomock.Controller) *MockUtilityInterface {
	mock := &MockUtilityInterface{ctrl: ctrl}
	mock.recorder = &MockUtilityInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUtilityInterface) EXPECT() *MockUtilityInterfaceMockRecorder {
	return m.recorder
}

// CreateDirIfNotExist mocks base method.
func (m *MockUtilityInterface) CreateDirIfNotExist(dirPath string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDirIfNotExist", dirPath)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateDirIfNotExist indicates an expected call of CreateDirIfNotExist.
func (mr *MockUtilityInterfaceMockRecorder) CreateDirIfNotExist(dirPath any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDirIfNotExist", reflect.TypeOf((*MockUtilityInterface)(nil).CreateDirIfNotExist), dirPath)
}

// GetLargerNumber mocks base method.
func (m *MockUtilityInterface) GetLargerNumber(num int, argNum string) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLargerNumber", num, argNum)
	ret0, _ := ret[0].(int)
	return ret0
}

// GetLargerNumber indicates an expected call of GetLargerNumber.
func (mr *MockUtilityInterfaceMockRecorder) GetLargerNumber(num, argNum any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLargerNumber", reflect.TypeOf((*MockUtilityInterface)(nil).GetLargerNumber), num, argNum)
}

// GetMaxConvertibleString mocks base method.
func (m *MockUtilityInterface) GetMaxConvertibleString(args []string, def string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMaxConvertibleString", args, def)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetMaxConvertibleString indicates an expected call of GetMaxConvertibleString.
func (mr *MockUtilityInterfaceMockRecorder) GetMaxConvertibleString(args, def any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMaxConvertibleString", reflect.TypeOf((*MockUtilityInterface)(nil).GetMaxConvertibleString), args, def)
}

// PrintlnWithWriter mocks base method.
func (m *MockUtilityInterface) PrintlnWithWriter(writer ioproxy.WriterInstanceInterface, a ...any) {
	m.ctrl.T.Helper()
	varargs := []any{writer}
	for _, a_2 := range a {
		varargs = append(varargs, a_2)
	}
	m.ctrl.Call(m, "PrintlnWithWriter", varargs...)
}

// PrintlnWithWriter indicates an expected call of PrintlnWithWriter.
func (mr *MockUtilityInterfaceMockRecorder) PrintlnWithWriter(writer any, a ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{writer}, a...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrintlnWithWriter", reflect.TypeOf((*MockUtilityInterface)(nil).PrintlnWithWriter), varargs...)
}
