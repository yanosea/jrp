// Code generated by MockGen. DO NOT EDIT.
// Source: ../app/proxy/strconv/strconvproxy.go
//
// Generated by this command:
//
//	mockgen -source=../app/proxy/strconv/strconvproxy.go -destination=../mock/app/proxy/strconv/strconvproxy.go -package=mockstrconvproxy
//

// Package mockstrconvproxy is a generated GoMock package.
package mockstrconvproxy

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockStrconv is a mock of Strconv interface.
type MockStrconv struct {
	ctrl     *gomock.Controller
	recorder *MockStrconvMockRecorder
}

// MockStrconvMockRecorder is the mock recorder for MockStrconv.
type MockStrconvMockRecorder struct {
	mock *MockStrconv
}

// NewMockStrconv creates a new mock instance.
func NewMockStrconv(ctrl *gomock.Controller) *MockStrconv {
	mock := &MockStrconv{ctrl: ctrl}
	mock.recorder = &MockStrconvMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStrconv) EXPECT() *MockStrconvMockRecorder {
	return m.recorder
}

// Atoi mocks base method.
func (m *MockStrconv) Atoi(s string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Atoi", s)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Atoi indicates an expected call of Atoi.
func (mr *MockStrconvMockRecorder) Atoi(s any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Atoi", reflect.TypeOf((*MockStrconv)(nil).Atoi), s)
}

// FormatBool mocks base method.
func (m *MockStrconv) FormatBool(b bool) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FormatBool", b)
	ret0, _ := ret[0].(string)
	return ret0
}

// FormatBool indicates an expected call of FormatBool.
func (mr *MockStrconvMockRecorder) FormatBool(b any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FormatBool", reflect.TypeOf((*MockStrconv)(nil).FormatBool), b)
}

// Itoa mocks base method.
func (m *MockStrconv) Itoa(i int) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Itoa", i)
	ret0, _ := ret[0].(string)
	return ret0
}

// Itoa indicates an expected call of Itoa.
func (mr *MockStrconvMockRecorder) Itoa(i any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Itoa", reflect.TypeOf((*MockStrconv)(nil).Itoa), i)
}
