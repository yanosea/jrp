// Code generated by MockGen. DO NOT EDIT.
// Source: ../app/proxy/promptui/promptuiproxy.go
//
// Generated by this command:
//
//	mockgen -source=../app/proxy/promptui/promptuiproxy.go -destination=../mock/app/proxy/promptui/promptuiproxy.go -package=mockpromptuiproxy
//

// Package mockpromptuiproxy is a generated GoMock package.
package mockpromptuiproxy

import (
	reflect "reflect"

	promptuiproxy "github.com/yanosea/jrp/app/proxy/promptui"
	gomock "go.uber.org/mock/gomock"
)

// MockPromptui is a mock of Promptui interface.
type MockPromptui struct {
	ctrl     *gomock.Controller
	recorder *MockPromptuiMockRecorder
}

// MockPromptuiMockRecorder is the mock recorder for MockPromptui.
type MockPromptuiMockRecorder struct {
	mock *MockPromptui
}

// NewMockPromptui creates a new mock instance.
func NewMockPromptui(ctrl *gomock.Controller) *MockPromptui {
	mock := &MockPromptui{ctrl: ctrl}
	mock.recorder = &MockPromptuiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPromptui) EXPECT() *MockPromptuiMockRecorder {
	return m.recorder
}

// NewPrompt mocks base method.
func (m *MockPromptui) NewPrompt() promptuiproxy.PromptInstanceInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewPrompt")
	ret0, _ := ret[0].(promptuiproxy.PromptInstanceInterface)
	return ret0
}

// NewPrompt indicates an expected call of NewPrompt.
func (mr *MockPromptuiMockRecorder) NewPrompt() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewPrompt", reflect.TypeOf((*MockPromptui)(nil).NewPrompt))
}
