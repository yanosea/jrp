// Code generated by MockGen. DO NOT EDIT.
// Source: ../app/proxy/sql/resultinstance.go
//
// Generated by this command:
//
//	mockgen -source=../app/proxy/sql/resultinstance.go -destination=../mock/app/proxy/sql/resultinstance.go -package=mocksqlproxy
//

// Package mocksqlproxy is a generated GoMock package.
package mocksqlproxy

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockResultInstanceInterface is a mock of ResultInstanceInterface interface.
type MockResultInstanceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockResultInstanceInterfaceMockRecorder
}

// MockResultInstanceInterfaceMockRecorder is the mock recorder for MockResultInstanceInterface.
type MockResultInstanceInterfaceMockRecorder struct {
	mock *MockResultInstanceInterface
}

// NewMockResultInstanceInterface creates a new mock instance.
func NewMockResultInstanceInterface(ctrl *gomock.Controller) *MockResultInstanceInterface {
	mock := &MockResultInstanceInterface{ctrl: ctrl}
	mock.recorder = &MockResultInstanceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResultInstanceInterface) EXPECT() *MockResultInstanceInterfaceMockRecorder {
	return m.recorder
}

// LastInsertId mocks base method.
func (m *MockResultInstanceInterface) LastInsertId() (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LastInsertId")
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LastInsertId indicates an expected call of LastInsertId.
func (mr *MockResultInstanceInterfaceMockRecorder) LastInsertId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LastInsertId", reflect.TypeOf((*MockResultInstanceInterface)(nil).LastInsertId))
}

// RowsAffected mocks base method.
func (m *MockResultInstanceInterface) RowsAffected() (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RowsAffected")
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RowsAffected indicates an expected call of RowsAffected.
func (mr *MockResultInstanceInterfaceMockRecorder) RowsAffected() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RowsAffected", reflect.TypeOf((*MockResultInstanceInterface)(nil).RowsAffected))
}
