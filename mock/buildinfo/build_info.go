// Code generated by MockGen. DO NOT EDIT.
// Source: internal/buildinfo/build_info.go
//
// Generated by this command:
//
//	mockgen -source=internal/buildinfo/build_info.go -destination=mock/buildinfo/build_info.go -package=mock_buildinfo
//

// Package mock_buildinfo is a generated GoMock package.
package mock_buildinfo

import (
	reflect "reflect"
	debug "runtime/debug"

	gomock "go.uber.org/mock/gomock"
)

// MockBuildInfoProvider is a mock of BuildInfoProvider interface.
type MockBuildInfoProvider struct {
	ctrl     *gomock.Controller
	recorder *MockBuildInfoProviderMockRecorder
}

// MockBuildInfoProviderMockRecorder is the mock recorder for MockBuildInfoProvider.
type MockBuildInfoProviderMockRecorder struct {
	mock *MockBuildInfoProvider
}

// NewMockBuildInfoProvider creates a new mock instance.
func NewMockBuildInfoProvider(ctrl *gomock.Controller) *MockBuildInfoProvider {
	mock := &MockBuildInfoProvider{ctrl: ctrl}
	mock.recorder = &MockBuildInfoProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBuildInfoProvider) EXPECT() *MockBuildInfoProviderMockRecorder {
	return m.recorder
}

// ReadBuildInfo mocks base method.
func (m *MockBuildInfoProvider) ReadBuildInfo() (*debug.BuildInfo, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadBuildInfo")
	ret0, _ := ret[0].(*debug.BuildInfo)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// ReadBuildInfo indicates an expected call of ReadBuildInfo.
func (mr *MockBuildInfoProviderMockRecorder) ReadBuildInfo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadBuildInfo", reflect.TypeOf((*MockBuildInfoProvider)(nil).ReadBuildInfo))
}
